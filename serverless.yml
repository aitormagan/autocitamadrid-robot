service: vacunacovid-telegrambot

plugins:
  - serverless-python-requirements
  - serverless-plugin-aws-alerts

custom:
  pythonRequirements:
    dockerizePip: non-linux
  alerts:
    stages:
      - pro
    topics:
      alarm:
        topic: ${self:service}-${opt:stage}-alerts-alarm
        notifications:
          - protocol: email
            endpoint: ${env:NOTIFICATIONS_EMAIL}
    alarms:
      - functionErrors
    definitions:
      functionErrors:
        treatMissingData: notBreaching
  min_date_param:
    dev: "/autocita/madrid/dev/min-date-info"
    pro: "/autocita/madrid/pro/min-date-info"
  table:
    dev: "vaccine-notifications-dev"
    pro: "vaccine-notifications-pro"
  throughput:
    dev: 1
    pro: 5
  update_centres_time:
    dev: 300
    pro: 1200


provider:
  name: aws
  runtime: python3.7
  stage: dev
  timeout: 15
  region: eu-west-1
  logRetentionInDays: 7
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - ssm:PutParameter
        - ssm:GetParameter
      Resource:
        - "*"
  environment:
    NOTIFICATIONS_TABLE: ${self:custom.table.${opt:stage, self:provider.stage}}
    PARAM_MIN_DATE: ${self:custom.min_date_param.${opt:stage, self:provider.stage}}
    BOT_TOKEN: ${env:BOT_TOKEN}
    UPDATE_CENTRES_TIME: ${self:custom.update_centres_time.${opt:stage, self:provider.stage}}

functions:
  message_handler:
    handler: main.handle_telegram_message
    timeout: 30
    events:
      - http:
          path: /
          method: ANY
          cors: true
      - http:
          path: '{proxy+}'
          method: ANY
          cors: true
  checker:
    handler: main.handle_check
    timeout: 900
    events:
      - schedule: rate(20 minutes)

resources:
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.table.${opt:stage, self:provider.stage}}
        AttributeDefinitions:
          - AttributeName: user_id
            AttributeType: S
        KeySchema:
          - AttributeName: user_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: ${self:custom.throughput.${opt:stage, self:provider.stage}}
          WriteCapacityUnits: ${self:custom.throughput.${opt:stage, self:provider.stage}}
